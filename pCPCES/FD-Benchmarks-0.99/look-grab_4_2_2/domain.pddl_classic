(define (domain look-grab)
    (:types  object - null object - object position - object inter - object)
    (:predicates (true) (adj ?i - position ?j - position)(located ?i - position)(holding ?o - object ?int - inter)(obj-at ?o - object ?i - position ?int - inter)(handempty  ?int - inter)(valid ?int - inter))
    (:action move
        :parameters (?i - position ?j - position )
        :effect (and
            (not (located ?i)) 
            (located ?j) 
            (forall (?int - inter)(when(and (not (and (adj ?i ?j) (located ?i) ) )) (not (valid ?int))))
        )
    )
    (:action pickup-1-1-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p1-1) )) (not (valid ?int))))
        )
    )
    (:action pickup-1-2-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p1-2) )) (not (valid ?int))))
        )
    )
    (:action pickup-1-3-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p1-3) )) (not (valid ?int))))
        )
    )
    (:action pickup-1-4-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p1-4) )) (not (valid ?int))))
        )
    )
    (:action pickup-2-1-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p2-1) )) (not (valid ?int))))
        )
    )
    (:action pickup-2-2-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p2-2) )) (not (valid ?int))))
        )
    )
    (:action pickup-2-3-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p2-3) )) (not (valid ?int))))
        )
    )
    (:action pickup-2-4-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p1-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p1-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p2-4) )) (not (valid ?int))))
        )
    )
    (:action pickup-3-1-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p3-1) )) (not (valid ?int))))
        )
    )
    (:action pickup-3-2-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p3-2) )) (not (valid ?int))))
        )
    )
    (:action pickup-3-3-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p3-3) )) (not (valid ?int))))
        )
    )
    (:action pickup-3-4-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p2-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p2-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p3-4) )) (not (valid ?int))))
        )
    )
    (:action pickup-4-1-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p4-1) )) (not (valid ?int))))
        )
    )
    (:action pickup-4-2-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-1 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p4-2) )) (not (valid ?int))))
        )
    )
    (:action pickup-4-3-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-2 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p4-3) )) (not (valid ?int))))
        )
    )
    (:action pickup-4-4-look-2
        :parameters ()
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o1 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o1 ?int) (not (obj-at o1 p4-4 ?int)) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p3-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p3-4 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-3 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-3 ?int)) ) ))
            (forall (?int - inter) (when (and ( handempty  ?int) ( obj-at o2 p4-4 ?int) ) (and (not (handempty  ?int)) ( holding o2 ?int) (not (obj-at o2 p4-4 ?int)) ) ))
            (forall (?int - inter)(when(and (not (located p4-4) )) (not (valid ?int))))
        )
    )
    (:action putdown
        :parameters (?p - position )
        :effect (and
            (forall (?int - inter) (when ( holding o1 ?int) (and ( handempty  ?int) (not (holding o1 ?int)) ( obj-at o1 ?p ?int) ) ))
            (forall (?int - inter) (when ( holding o2 ?int) (and ( handempty  ?int) (not (holding o2 ?int)) ( obj-at o2 ?p ?int) ) ))
            (forall (?int - inter)(when(and (not (located ?p) )) (not (valid ?int))))
        )
    )
)